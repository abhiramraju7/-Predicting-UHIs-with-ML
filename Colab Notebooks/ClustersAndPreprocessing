{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "WUwAaIgNaH0O",
        "rAhb530cmRHN",
        "xKoWZQXNwllg"
      ]
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "##Data Loading:"
      ],
      "metadata": {
        "id": "YdrExM7sk8Mn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "ipGiOMP3ZSps"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pCIVJZeOkd_G",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4503363f-4de8-46f9-d02e-e25f1fd7a7f2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "file_path= \"/content/drive/MyDrive/FINALUHIDATA.csv\"\n",
        "data=pd.read_csv(file_path)"
      ],
      "metadata": {
        "id": "ZM_kF-LmZAlz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Data Preprocessing:"
      ],
      "metadata": {
        "id": "GRi09Fj55_KR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "OzKzEMD6Ie5i",
        "outputId": "5a2c488b-1436-424c-b92a-9fde6e8e7253"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   OBJECTID  plotid  longitude   latitude  shape  size_m  sample_points  \\\n",
              "0         1     600 -97.764672  30.498494    NaN     100            100   \n",
              "1         2     601 -97.777717  30.487252    NaN     100            100   \n",
              "2         3     602 -97.777717  30.491749    NaN     100            100   \n",
              "3         4     603 -97.777717  30.496245    NaN     100            100   \n",
              "4         5     604 -97.777717  30.500742    NaN     100            100   \n",
              "\n",
              "   flagged  flagged_reason  confidence  ...  \\\n",
              "0      0.0             NaN        81.0  ...   \n",
              "1      0.0             NaN        90.0  ...   \n",
              "2      0.0             NaN        80.0  ...   \n",
              "3      0.0             NaN        86.0  ...   \n",
              "4      0.0             NaN        78.0  ...   \n",
              "\n",
              "  ECO_L2T_LSTE_002_QC_Data_quality_flag_Description  \\\n",
              "0                             Good quality L1B data   \n",
              "1                             Good quality L1B data   \n",
              "2                             Good quality L1B data   \n",
              "3                             Good quality L1B data   \n",
              "4                             Good quality L1B data   \n",
              "\n",
              "  ECO_L2T_LSTE_002_QC_LST_accuracy  \\\n",
              "0                             0b11   \n",
              "1                             0b10   \n",
              "2                             0b01   \n",
              "3                             0b00   \n",
              "4                             0b01   \n",
              "\n",
              "   ECO_L2T_LSTE_002_QC_LST_accuracy_Description  ObjectId      x_LST  \\\n",
              "0                  <1 K (Excellent performance)     62531 -97.764672   \n",
              "1                  1 - 1.5 K (Good performance)     57417 -97.777717   \n",
              "2              1.5 - 2 K (Marginal performance)     59561 -97.777717   \n",
              "3                       >2 K (Poor performance)     60381 -97.777717   \n",
              "4              1.5 - 2 K (Marginal performance)     63931 -97.777717   \n",
              "\n",
              "       y_LST  AOI Latitude  AOI Longitude  Median Income_LST  \\\n",
              "0  30.498494     30.498494     -97.764672             117987   \n",
              "1  30.487252     30.487252     -97.777717              61777   \n",
              "2  30.491749     30.491749     -97.777717              61777   \n",
              "3  30.496245     30.496245     -97.777717              61777   \n",
              "4  30.500742     30.500742     -97.777717              61777   \n",
              "\n",
              "   Average Income_LST  \n",
              "0         90641.59459  \n",
              "1         90641.59459  \n",
              "2         90641.59459  \n",
              "3         90641.59459  \n",
              "4         90641.59459  \n",
              "\n",
              "[5 rows x 119 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5cd8b38c-aeb6-4911-a8b8-07af40063f16\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>OBJECTID</th>\n",
              "      <th>plotid</th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>shape</th>\n",
              "      <th>size_m</th>\n",
              "      <th>sample_points</th>\n",
              "      <th>flagged</th>\n",
              "      <th>flagged_reason</th>\n",
              "      <th>confidence</th>\n",
              "      <th>...</th>\n",
              "      <th>ECO_L2T_LSTE_002_QC_Data_quality_flag_Description</th>\n",
              "      <th>ECO_L2T_LSTE_002_QC_LST_accuracy</th>\n",
              "      <th>ECO_L2T_LSTE_002_QC_LST_accuracy_Description</th>\n",
              "      <th>ObjectId</th>\n",
              "      <th>x_LST</th>\n",
              "      <th>y_LST</th>\n",
              "      <th>AOI Latitude</th>\n",
              "      <th>AOI Longitude</th>\n",
              "      <th>Median Income_LST</th>\n",
              "      <th>Average Income_LST</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>600</td>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>81.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Good quality L1B data</td>\n",
              "      <td>0b11</td>\n",
              "      <td>&lt;1 K (Excellent performance)</td>\n",
              "      <td>62531</td>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>-97.764672</td>\n",
              "      <td>117987</td>\n",
              "      <td>90641.59459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>601</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>90.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Good quality L1B data</td>\n",
              "      <td>0b10</td>\n",
              "      <td>1 - 1.5 K (Good performance)</td>\n",
              "      <td>57417</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>602</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>80.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Good quality L1B data</td>\n",
              "      <td>0b01</td>\n",
              "      <td>1.5 - 2 K (Marginal performance)</td>\n",
              "      <td>59561</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>603</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>86.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Good quality L1B data</td>\n",
              "      <td>0b00</td>\n",
              "      <td>&gt;2 K (Poor performance)</td>\n",
              "      <td>60381</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>604</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100</td>\n",
              "      <td>100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Good quality L1B data</td>\n",
              "      <td>0b01</td>\n",
              "      <td>1.5 - 2 K (Marginal performance)</td>\n",
              "      <td>63931</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>-97.777717</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 119 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cd8b38c-aeb6-4911-a8b8-07af40063f16')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5cd8b38c-aeb6-4911-a8b8-07af40063f16 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5cd8b38c-aeb6-4911-a8b8-07af40063f16');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3f6216f6-0dce-4b5e-af6e-f58d35ec0aeb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f6216f6-0dce-4b5e-af6e-f58d35ec0aeb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3f6216f6-0dce-4b5e-af6e-f58d35ec0aeb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Selecting required columns\n",
        "columns = ['longitude', 'latitude', 'grass', 'Impervious Surface (no building)', 'Trees_CanopyCover', 'bush/scrub', 'Median Income_LST', 'Average Income_LST']#,'ECO_L2T_LSTE_002_LST']\n",
        "data_selected = data.loc[:, columns]\n",
        "\n",
        "# Combine grass, Trees_CanopyCover, and bush/scrub into a single variable\n",
        "data_selected.loc[:, 'Vegetation'] = data_selected[['grass', 'Trees_CanopyCover', 'bush/scrub']].sum(axis=1)\n",
        "\n",
        "# Remove the individual columns\n",
        "data_selected = data_selected.drop(columns=['grass', 'Trees_CanopyCover', 'bush/scrub'])\n",
        "\n",
        "# Display the first few rows of the modified dataset\n",
        "data_selected.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "EyDk_ZD376tX",
        "outputId": "fd9a27eb-0ab0-4755-a52d-9a71a1ef90a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude   latitude  Impervious Surface (no building)  Median Income_LST  \\\n",
              "0 -97.764672  30.498494                                24             117987   \n",
              "1 -97.777717  30.487252                                 0              61777   \n",
              "2 -97.777717  30.491749                                 0              61777   \n",
              "3 -97.777717  30.496245                                19              61777   \n",
              "4 -97.777717  30.500742                                 7              61777   \n",
              "\n",
              "   Average Income_LST  Vegetation  \n",
              "0         90641.59459          70  \n",
              "1         90641.59459         100  \n",
              "2         90641.59459         100  \n",
              "3         90641.59459          46  \n",
              "4         90641.59459          41  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fc7a1679-c2c2-4b12-a023-daec61720025\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious Surface (no building)</th>\n",
              "      <th>Median Income_LST</th>\n",
              "      <th>Average Income_LST</th>\n",
              "      <th>Vegetation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>24</td>\n",
              "      <td>117987</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>19</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>7</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc7a1679-c2c2-4b12-a023-daec61720025')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fc7a1679-c2c2-4b12-a023-daec61720025 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fc7a1679-c2c2-4b12-a023-daec61720025');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-26cb3184-4b45-454c-9770-bbf37a7aecd7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26cb3184-4b45-454c-9770-bbf37a7aecd7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-26cb3184-4b45-454c-9770-bbf37a7aecd7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_selected",
              "summary": "{\n  \"name\": \"data_selected\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07818248554734678,\n        \"min\": -97.99799409,\n        \"max\": -97.692768,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -97.75750941,\n          -97.764672,\n          -97.7646826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09257915312529016,\n        \"min\": 30.285826,\n        \"max\": 30.5566761,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          30.43144153,\n          30.498494,\n          30.40338919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious Surface (no building)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 81,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          24,\n          15,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76075,\n        \"min\": 28439,\n        \"max\": 300000,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          117987,\n          61777,\n          28439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67268.19757219934,\n        \"min\": 49128.7027,\n        \"max\": 300000.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          85173.54054,\n          300000.0,\n          117987.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          37,\n          54,\n          53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove rows with missing values\n",
        "data_cleaned = data_selected.dropna()\n",
        "\n",
        "# Display the first few rows of the cleaned dataset\n",
        "data_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ZuM6m-gq7o6T",
        "outputId": "4bf03af0-a609-4b70-845a-e0cb7f4746cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude   latitude  Impervious Surface (no building)  Median Income_LST  \\\n",
              "0 -97.764672  30.498494                                24             117987   \n",
              "1 -97.777717  30.487252                                 0              61777   \n",
              "2 -97.777717  30.491749                                 0              61777   \n",
              "3 -97.777717  30.496245                                19              61777   \n",
              "4 -97.777717  30.500742                                 7              61777   \n",
              "\n",
              "   Average Income_LST  Vegetation  \n",
              "0         90641.59459          70  \n",
              "1         90641.59459         100  \n",
              "2         90641.59459         100  \n",
              "3         90641.59459          46  \n",
              "4         90641.59459          41  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-20a7972f-04d5-40b1-a5b2-3c7c78fef91e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious Surface (no building)</th>\n",
              "      <th>Median Income_LST</th>\n",
              "      <th>Average Income_LST</th>\n",
              "      <th>Vegetation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>24</td>\n",
              "      <td>117987</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>19</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>7</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20a7972f-04d5-40b1-a5b2-3c7c78fef91e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-20a7972f-04d5-40b1-a5b2-3c7c78fef91e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-20a7972f-04d5-40b1-a5b2-3c7c78fef91e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-923ea923-0d52-45d5-ae50-bfe1d59949b1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-923ea923-0d52-45d5-ae50-bfe1d59949b1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-923ea923-0d52-45d5-ae50-bfe1d59949b1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_cleaned",
              "summary": "{\n  \"name\": \"data_cleaned\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07818248554734678,\n        \"min\": -97.99799409,\n        \"max\": -97.692768,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -97.75750941,\n          -97.764672,\n          -97.7646826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09257915312529016,\n        \"min\": 30.285826,\n        \"max\": 30.5566761,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          30.43144153,\n          30.498494,\n          30.40338919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious Surface (no building)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 81,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          24,\n          15,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76075,\n        \"min\": 28439,\n        \"max\": 300000,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          117987,\n          61777,\n          28439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67268.19757219934,\n        \"min\": 49128.7027,\n        \"max\": 300000.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          85173.54054,\n          300000.0,\n          117987.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          37,\n          54,\n          53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_cleaned.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kxLdbGty7u82",
        "outputId": "176273c9-e391-4e66-c733-557afe46721d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 444 entries, 0 to 443\n",
            "Data columns (total 6 columns):\n",
            " #   Column                            Non-Null Count  Dtype  \n",
            "---  ------                            --------------  -----  \n",
            " 0   longitude                         444 non-null    float64\n",
            " 1   latitude                          444 non-null    float64\n",
            " 2   Impervious Surface (no building)  444 non-null    int64  \n",
            " 3   Median Income_LST                 444 non-null    int64  \n",
            " 4   Average Income_LST                444 non-null    float64\n",
            " 5   Vegetation                        444 non-null    int64  \n",
            "dtypes: float64(3), int64(3)\n",
            "memory usage: 20.9 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_cleaned.rename(columns={'Impervious Surface (no building)': 'Impervious'}, inplace=True)\n",
        "data_cleaned.rename(columns={'Median Income_LST': 'Median_Income'}, inplace=True)\n",
        "data_cleaned.rename(columns={'Average Income_LST': 'Avg_Income'}, inplace=True)\n",
        "data_cleaned.rename(columns={'ECO_L2T_LSTE_002_LST': 'LST'}, inplace=True)\n"
      ],
      "metadata": {
        "id": "zhYMwLXj86fN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Normalize the data\n",
        "scaler = StandardScaler()\n",
        "data_normalized = scaler.fit_transform(data_cleaned)\n",
        "\n",
        "# Convert normalized data back to DataFrame\n",
        "data_normalized = pd.DataFrame(data_normalized, columns=data_cleaned.columns)\n",
        "\n",
        "# Display the first few rows of the normalized dataset\n",
        "data_normalized.head()"
      ],
      "metadata": {
        "id": "GGBvoNeS8pXr",
        "outputId": "eb0cbee3-3cb7-46c8-e7cb-131419000061",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude  latitude  Impervious  Median_Income  Avg_Income  Vegetation\n",
              "0   0.150466  0.699071    0.785218      -0.015053   -0.550995    0.558176\n",
              "1  -0.016575  0.577503   -0.833525      -0.754757   -0.550995    1.509419\n",
              "2  -0.016575  0.626132   -0.833525      -0.754757   -0.550995    1.509419\n",
              "3  -0.016575  0.674751    0.447980      -0.754757   -0.550995   -0.202817\n",
              "4  -0.016575  0.723380   -0.361391      -0.754757   -0.550995   -0.361358"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-427d5150-8b81-4ce6-a7cb-94ee42b7c578\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious</th>\n",
              "      <th>Median_Income</th>\n",
              "      <th>Avg_Income</th>\n",
              "      <th>Vegetation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.150466</td>\n",
              "      <td>0.699071</td>\n",
              "      <td>0.785218</td>\n",
              "      <td>-0.015053</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>0.558176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.577503</td>\n",
              "      <td>-0.833525</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>1.509419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.626132</td>\n",
              "      <td>-0.833525</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>1.509419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.674751</td>\n",
              "      <td>0.447980</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>-0.202817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.723380</td>\n",
              "      <td>-0.361391</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>-0.361358</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-427d5150-8b81-4ce6-a7cb-94ee42b7c578')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-427d5150-8b81-4ce6-a7cb-94ee42b7c578 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-427d5150-8b81-4ce6-a7cb-94ee42b7c578');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f381564f-ecf9-4b2e-bbcb-703260b84fc7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f381564f-ecf9-4b2e-bbcb-703260b84fc7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f381564f-ecf9-4b2e-bbcb-703260b84fc7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_normalized",
              "summary": "{\n  \"name\": \"data_normalized\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.001128031943525,\n        \"min\": -2.8372268344068527,\n        \"max\": 1.0711983408770778,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          0.24218350558773422,\n          0.15046642112662362,\n          0.15033068794980942\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.6006679776985224,\n        \"max\": 1.3282379196987493,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -0.026017702252324394,\n          0.6990711008090504,\n          -0.32936875902431534\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.001128031943525,\n        \"min\": -0.8335246177050758,\n        \"max\": 4.629730230325786,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          0.7852175594892539,\n          0.17818924304138029,\n          1.7969314202357098\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.193473444959793,\n        \"max\": 2.3801734062994306,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.015053391135565902,\n          -0.7547571391306056,\n          -1.193473444959793\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.1688162373089725,\n        \"max\": 2.5648097137580605,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.6323740719045567,\n          2.5648097137580605,\n          -0.14402333149427848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.661389159934323,\n        \"max\": 1.5094188997752684,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          -0.48819017784177404,\n          0.05084719230885647,\n          0.019139111711760557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_normalized.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "XKmvHTs-9PAG",
        "outputId": "96ebbd5b-67cd-4858-e4ec-bc56eb56cc7e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude  latitude  Impervious  Median_Income  Avg_Income  Vegetation\n",
              "0   0.150466  0.699071    0.785218      -0.015053   -0.550995    0.558176\n",
              "1  -0.016575  0.577503   -0.833525      -0.754757   -0.550995    1.509419\n",
              "2  -0.016575  0.626132   -0.833525      -0.754757   -0.550995    1.509419\n",
              "3  -0.016575  0.674751    0.447980      -0.754757   -0.550995   -0.202817\n",
              "4  -0.016575  0.723380   -0.361391      -0.754757   -0.550995   -0.361358"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3e10305f-61a6-4667-b4bb-098330519e82\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious</th>\n",
              "      <th>Median_Income</th>\n",
              "      <th>Avg_Income</th>\n",
              "      <th>Vegetation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.150466</td>\n",
              "      <td>0.699071</td>\n",
              "      <td>0.785218</td>\n",
              "      <td>-0.015053</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>0.558176</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.577503</td>\n",
              "      <td>-0.833525</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>1.509419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.626132</td>\n",
              "      <td>-0.833525</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>1.509419</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.674751</td>\n",
              "      <td>0.447980</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>-0.202817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.723380</td>\n",
              "      <td>-0.361391</td>\n",
              "      <td>-0.754757</td>\n",
              "      <td>-0.550995</td>\n",
              "      <td>-0.361358</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e10305f-61a6-4667-b4bb-098330519e82')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3e10305f-61a6-4667-b4bb-098330519e82 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3e10305f-61a6-4667-b4bb-098330519e82');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c5fc2471-b872-446a-bfac-02ae5a37e1a6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5fc2471-b872-446a-bfac-02ae5a37e1a6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c5fc2471-b872-446a-bfac-02ae5a37e1a6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_normalized",
              "summary": "{\n  \"name\": \"data_normalized\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.001128031943525,\n        \"min\": -2.8372268344068527,\n        \"max\": 1.0711983408770778,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          0.24218350558773422,\n          0.15046642112662362,\n          0.15033068794980942\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.6006679776985224,\n        \"max\": 1.3282379196987493,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -0.026017702252324394,\n          0.6990711008090504,\n          -0.32936875902431534\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.001128031943525,\n        \"min\": -0.8335246177050758,\n        \"max\": 4.629730230325786,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          0.7852175594892539,\n          0.17818924304138029,\n          1.7969314202357098\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.193473444959793,\n        \"max\": 2.3801734062994306,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          -0.015053391135565902,\n          -0.7547571391306056,\n          -1.193473444959793\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.1688162373089725,\n        \"max\": 2.5648097137580605,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -0.6323740719045567,\n          2.5648097137580605,\n          -0.14402333149427848\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0011280319435247,\n        \"min\": -1.661389159934323,\n        \"max\": 1.5094188997752684,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          -0.48819017784177404,\n          0.05084719230885647,\n          0.019139111711760557\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_normalized.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1cWLfJXEbTS1",
        "outputId": "7feba7ad-c5b6-4594-b026-be1fd74fa2d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 444 entries, 0 to 443\n",
            "Data columns (total 6 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   longitude      444 non-null    float64\n",
            " 1   latitude       444 non-null    float64\n",
            " 2   Impervious     444 non-null    float64\n",
            " 3   Median_Income  444 non-null    float64\n",
            " 4   Avg_Income     444 non-null    float64\n",
            " 5   Vegetation     444 non-null    float64\n",
            "dtypes: float64(6)\n",
            "memory usage: 20.9 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Income"
      ],
      "metadata": {
        "id": "WUwAaIgNaH0O"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Distribution of median incomes\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "data_cleaned['Median_Income'].dropna().astype(float).hist(bins=50, edgecolor='black')\n",
        "\n",
        "plt.title('Distribution of Median Incomes')\n",
        "plt.xlabel('Median Income')\n",
        "plt.ylabel('Frequency')\n",
        "plt.grid(False)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "6M65jm1ulZ7V",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "583ad4b6-ac9c-4062-eb11-1d71db71ff9f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Distribution of minimum distances\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "data['Min Distance'].dropna().hist(bins=50, edgecolor='black')\n",
        "\n",
        "plt.title('Frequency Distribution of Minimum Distances')\n",
        "plt.xlabel('Minimum Distance (meters)')\n",
        "plt.ylabel('Frequency')\n",
        "plt.grid(False)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-sqFnDNHaPbn",
        "outputId": "b10f33d4-5546-4b97-c136-0a1db75c3b1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0kAAAIjCAYAAADWYVDIAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABYvElEQVR4nO3dd3gU5f7+8XtJDySUFEJJAOkdBcWICAIS6qEpXbpHj6AgcFTUIyAqloOiHgRrYqEcQWx4AJGuAgpSRCLSg1LiBkgIJCEkz+8PftnvLEkgWZJsEt6v69pLd+Z5Zj47M7vZm5l51maMMQIAAAAASJLKuLsAAAAAAChOCEkAAAAAYEFIAgAAAAALQhIAAAAAWBCSAAAAAMCCkAQAAAAAFoQkAAAAALAgJAEAAACABSEJAAAAACwISQBQTE2bNk02m61I1tW+fXu1b9/e8XzdunWy2WxasmRJkax/xIgRqlmzZpGsy1XJyckaM2aMwsLCZLPZNGHChAJfx7Xs85iYGNlsNh0+fLhgiyphSsKxBKD4IyQB17GsL1U5PR5//HF3l1eqXL6tfX19VbVqVUVFRen111/X2bNnC2Q9x44d07Rp07Rjx44CWV5BKs615cXzzz+vmJgY/eMf/9BHH32ke++9N9e2NWvWlM1mU6dOnXKc/8477ziOha1btxZWySVeVmjMevj7+ysiIkI9e/ZUdHS00tLSCmQ9e/bs0bRp0677gAng/3i6uwAA7vfMM8+oVq1aTtOaNGnipmpKt6xtnZ6erhMnTmjdunWaMGGCXnnlFX355Zdq1qyZo+1TTz2V77B67NgxTZ8+XTVr1lSLFi3y3O+bb77J13pccaXa3nnnHWVmZhZ6DddizZo1uvXWWzV16tQ8tff19dXatWt14sQJhYWFOc2bP3++fH19lZqa6jTdlX2e5d5779XAgQPl4+PjUv/ibO7cuSpXrpzS0tL0559/auXKlRo1apRmz56tZcuWKTw83NHWlWNpz549mj59utq3b89ZKACSCEkAJHXt2lWtWrXKU9vU1FR5e3urTBlORLvi8m09ZcoUrVmzRj169NDf/vY3xcbGys/PT5Lk6ekpT8/C/Zg+f/68/P395e3tXajruRovLy+3rj8v4uPj1ahRozy3b9OmjX766Sf997//1fjx4x3T//jjD23cuFF9+vTRp59+6tTnWva5h4eHPDw8XOpb3N19990KDg52PH/66ac1f/58DRs2TPfcc482b97smFcSjiUAxR/fcgDkKuu+lEWLFumpp55StWrV5O/vr6SkJEnSli1b1KVLF5UvX17+/v5q166dvv/++2zL+e6773TzzTfL19dXtWvX1ltvvZXt3ovDhw/LZrMpJiYmW3+bzaZp06Y5Tfvzzz81atQoVa5cWT4+PmrcuLHef//9HOv/5JNP9Nxzz6l69ery9fVVx44dtX///mzr2bJli7p166aKFSuqbNmyatasmV577TVJUnR0tGw2m7Zv356t3/PPPy8PDw/9+eefV92mOenQoYP+9a9/6ciRI/r4448d03O6P2XVqlW6/fbbVaFCBZUrV07169fXE0884Xi9N998syRp5MiRjkuUsrZp+/bt1aRJE23btk133HGH/P39HX0vvycpS0ZGhp544gmFhYWpbNmy+tvf/qajR486talZs6ZGjBiRra91mVerLaf7SM6dO6dJkyYpPDxcPj4+ql+/vv7973/LGOPUzmazady4cfr888/VpEkTx/GwYsWKnDf4ZeLj4zV69GhVrlxZvr6+at68uT744APH/Kzj6NChQ/r6668dtV/t0ixfX1/17dtXCxYscJq+cOFCVaxYUVFRUdn65LTP8/r6cronqWbNmurRo4fWrVunVq1ayc/PT02bNtW6deskSUuXLlXTpk3l6+urli1bZju+czsuLt9fWe/ff//735ozZ45uuOEG+fv7q3Pnzjp69KiMMZoxY4aqV68uPz8/9erVS6dOnbri9ruaIUOGaMyYMdqyZYtWrVqVa22StGjRIrVs2VIBAQEKDAxU06ZNHe/tmJgY3XPPPZKkO++807F/s7bRF198oe7du6tq1ary8fFR7dq1NWPGDGVkZGTbVk2aNNGePXt05513yt/fX9WqVdNLL72UrfbU1FRNmzZN9erVk6+vr6pUqaK+ffvqwIEDjjaZmZmaPXu2GjduLF9fX1WuXFn333+/Tp8+7bSsrVu3KioqSsHBwfLz81OtWrU0atQol7crgEs4kwRAiYmJstvtTtOs/2o7Y8YMeXt7a/LkyUpLS5O3t7fWrFmjrl27qmXLlpo6darKlCmj6OhodejQQRs3btQtt9wiSfrll1/UuXNnhYSEaNq0abp48aKmTp2qypUru1zvyZMndeuttzq+PIaEhGj58uUaPXq0kpKSst1Q/8ILL6hMmTKaPHmyEhMT9dJLL2nIkCHasmWLo82qVavUo0cPValSRePHj1dYWJhiY2O1bNkyjR8/XnfffbfGjh2r+fPn68Ybb3Ra/vz589W+fXtVq1bN5dd077336oknntA333yj++67L8c2v/76q3r06KFmzZrpmWeekY+Pj/bv3+8Ipg0bNtQzzzyjp59+Wn//+9/Vtm1bSdJtt93mWEZCQoK6du2qgQMHaujQoVfdD88995xsNpsee+wxxcfHa/bs2erUqZN27NjhOOOVF3mpzcoYo7/97W9au3atRo8erRYtWmjlypX65z//qT///FOvvvqqU/vvvvtOS5cu1YMPPqiAgAC9/vrr6tevn+Li4hQUFJRrXSkpKWrfvr3279+vcePGqVatWlq8eLFGjBihM2fOaPz48WrYsKE++ugjPfLII6pevbomTZokSQoJCbnq6x48eLA6d+6sAwcOqHbt2pKkBQsW6O67787XGQ9XX58k7d+/X4MHD9b999+voUOH6t///rd69uypefPm6YknntCDDz4oSZo5c6b69++vvXv3unymeP78+bpw4YIeeughnTp1Si+99JL69++vDh06aN26dXrssce0f/9+vfHGG5o8eXK2f9jIr3vvvVdvv/22vvnmG9111105tlm1apUGDRqkjh076sUXX5QkxcbG6vvvv9f48eN1xx136OGHH9brr7+uJ554Qg0bNpQkx39jYmJUrlw5TZw4UeXKldOaNWv09NNPKykpSS+//LLTuk6fPq0uXbqob9++6t+/v5YsWaLHHntMTZs2VdeuXSVd+oeHHj16aPXq1Ro4cKDGjx+vs2fPatWqVdq9e7fjOLn//vsVExOjkSNH6uGHH9ahQ4f0n//8R9u3b9f3338vLy8vxcfHOz5fH3/8cVWoUEGHDx/W0qVLr2m7ApBkAFy3oqOjjaQcH8YYs3btWiPJ3HDDDeb8+fOOfpmZmaZu3bomKirKZGZmOqafP3/e1KpVy9x1112Oab179za+vr7myJEjjml79uwxHh4exvoRdOjQISPJREdHZ6tTkpk6darj+ejRo02VKlWM3W53ajdw4EBTvnx5R61Z9Tds2NCkpaU52r322mtGkvnll1+MMcZcvHjR1KpVy9SoUcOcPn3aaZnW1zdo0CBTtWpVk5GR4Zj2888/51q3Vda2/umnn3JtU758eXPjjTc6nk+dOtVpG7366qtGkvnrr79yXcZPP/2Uaz3t2rUzksy8efNynNeuXTvH86xtV61aNZOUlOSY/sknnxhJ5rXXXnNMq1Gjhhk+fPhVl3ml2oYPH25q1KjheP75558bSebZZ591anf33Xcbm81m9u/f75gmyXh7eztN27lzp5Fk3njjjWzrspo9e7aRZD7++GPHtAsXLpjIyEhTrlw5p9deo0YN07179ysu7/K2Fy9eNGFhYWbGjBnGmEvHviSzfv36HI+Jy/d5fl5f1vIOHTrkVIck88MPPzimrVy50kgyfn5+Tu/Lt956y0gya9eudUy7fB9muXx/Zb1/Q0JCzJkzZxzTp0yZYiSZ5s2bm/T0dMf0QYMGGW9vb5OamnqFrfh/2yO3Y/706dNGkunTp0+utY0fP94EBgaaixcv5rqexYsXZ3vtWayffVnuv/9+4+/v71R/1vvrww8/dExLS0szYWFhpl+/fo5p77//vpFkXnnllWzLzfq82bhxo5Fk5s+f7zR/xYoVTtM/++yzq36uAHANl9sB0Jw5c7Rq1Sqnh9Xw4cOdzhrs2LFD+/bt0+DBg5WQkCC73S673a5z586pY8eO2rBhgzIzM5WRkaGVK1eqd+/eioiIcPRv2LBhjpca5YUxRp9++ql69uwpY4xj3Xa7XVFRUUpMTNTPP//s1GfkyJFO99xkncU4ePCgJGn79u06dOiQJkyYoAoVKjj1tV76NGzYMB07dkxr1651TJs/f778/PzUr18/l16PVbly5a44yl1WbV988YXLgxz4+Pho5MiReW4/bNgwBQQEOJ7ffffdqlKliv73v/+5tP68+t///icPDw89/PDDTtMnTZokY4yWL1/uNL1Tp06Of4GXpGbNmikwMNCxj6+0nrCwMA0aNMgxzcvLSw8//LCSk5O1fv36a3odHh4e6t+/vxYuXCjp0vESHh7uOAbzytXXJ0mNGjVSZGSk43nr1q0lXbrM0/q+zJqel2Xm5p577lH58uWzLXPo0KFO91q1bt1aFy5ccPkS1SzlypWTpKu+b86dO5ftcy2vrJ99Z8+eld1uV9u2bXX+/Hn99ttv2eoZOnSo47m3t7duueUWp2366aefKjg4WA899FC2dWV93ixevFjly5fXXXfd5fQZ17JlS5UrV87xGZT1mbBs2TKlp6e79PoA5IyQBEC33HKLOnXq5PSwunzku3379km6FJ5CQkKcHu+++67S0tKUmJiov/76SykpKapbt262ddavX9+lWv/66y+dOXNGb7/9drZ1Z335j4+Pd+pj/SIoSRUrVpQkx7X9WfcBXG1Ev7vuuktVqlTR/PnzJV26Z2DhwoXq1auXU5BwVXJy8hWXM2DAALVp00ZjxoxR5cqVNXDgQH3yySf5CkzVqlXL1yANl+87m82mOnXqFPpQyUeOHFHVqlWzbY+sS6COHDniNP3yfSxd2s+X37+R03rq1q2b7fKy3NbjisGDB2vPnj3auXOnFixYoIEDB+b7t5BcfX059c0KMdYR4azT87LM4rAu6dJ7RtIV3zcPPvig6tWrp65du6p69eoaNWpUnu9Xky5d5tqnTx+VL19egYGBCgkJcQShxMREp7bVq1fPtm8v308HDhxQ/fr1rzhAx759+5SYmKjQ0NBsn3PJycmOz7h27dqpX79+mj59uoKDg9WrV68CHRoduJ5xTxKAq7r83pOsL+Uvv/xyrsNMZw3Xm1e5fWm8/OborHUPHTpUw4cPz7GPdRhtSbmO+GUuGwDgajw8PDR48GC98847evPNN/X999/r2LFjTv9y7Ko//vhDiYmJqlOnTq5t/Pz8tGHDBq1du1Zff/21VqxYof/+97/q0KGDvvnmmzyNbJaf+4jy6kr7rqhGWyuofVwYWrdurdq1a2vChAk6dOiQBg8enO9lXMvry61vXpZps9lyXMfl78uCWJcrdu/eLUlXfN+EhoZqx44dWrlypZYvX67ly5crOjpaw4YNcxqgIydnzpxRu3btFBgYqGeeeUa1a9eWr6+vfv75Zz322GPZ/oGioF5nZmamQkNDHf8gc7ms++GyfvB58+bN+uqrrxxDo8+aNUubN292nGkDkH+EJAD5lnXZT2BgYK4/lild+kPu5+fnOPNktXfvXqfnWWd3zpw54zT98n/JDwkJUUBAgDIyMq647vzIej27d+++6jKHDRumWbNm6auvvtLy5csVEhLi8qWDVh999JEkXXVZZcqUUceOHdWxY0e98sorev755/Xkk09q7dq16tSpU77PUFzN5fvOGKP9+/c7BdGKFStm22/SpX13ww03OJ7np7YaNWro22+/1dmzZ53OEmRd3lSjRo08L+tq69m1a5cyMzOdziYV9HoGDRqkZ599Vg0bNszX71e5W8WKFXO8/K4gzrAVhLy+b7y9vdWzZ0/17NlTmZmZevDBB/XWW2/pX//6l+rUqZPrsblu3TolJCRo6dKluuOOOxzTDx065HLNtWvX1pYtW5Senp7r4B21a9fWt99+qzZt2uTpHzZuvfVW3XrrrXruuee0YMECDRkyRIsWLdKYMWNcrhO43nG5HYB8a9mypWrXrq1///vfjstdrP766y9Jl/5VNSoqSp9//rni4uIc82NjY7Vy5UqnPoGBgQoODtaGDRucpr/55ptOzz08PNSvXz99+umnjn9Fzmnd+XHTTTepVq1amj17drYv+5f/C3CzZs3UrFkzvfvuu/r00081cODAa/4tozVr1mjGjBmqVauWhgwZkmu7nIZMzvrCnXXWrmzZspKyh01Xffjhh073eyxZskTHjx93jNQlXfpCt3nzZl24cMExbdmyZdmGCs9Pbd26dVNGRob+85//OE1/9dVXZbPZnNZ/Lbp166YTJ07ov//9r2PaxYsX9cYbb6hcuXJq165dgaxnzJgxmjp1qmbNmlUgyysqtWvX1m+//eb0vtq5c2eOQ/0XtQULFujdd99VZGSkOnbsmGu7hIQEp+dlypRxhPyrvW+yzgxZPwcuXLiQ7XMpP/r16ye73Z7t2Laup3///srIyNCMGTOytbl48aKjztOnT2f7jLr8MwGAaziTBCDfypQpo3fffVddu3ZV48aNNXLkSFWrVk1//vmn1q5dq8DAQH311VeSpOnTp2vFihVq27atHnzwQccX0MaNG2vXrl1Oyx0zZoxeeOEFjRkzRq1atdKGDRv0+++/Z1v/Cy+8oLVr16p169a677771KhRI506dUo///yzvv3223z//kqZMmU0d+5c9ezZUy1atNDIkSNVpUoV/fbbb/r111+zBbphw4Zp8uTJkpTvS+2WL1+u3377TRcvXtTJkye1Zs0arVq1SjVq1NCXX34pX1/fXPs+88wz2rBhg7p3764aNWooPj5eb775pqpXr67bb79d0qUvtRUqVNC8efMUEBCgsmXLqnXr1tnuK8urSpUq6fbbb9fIkSN18uRJzZ49W3Xq1HEapnzMmDFasmSJunTpov79++vAgQP6+OOPnQYayG9tPXv21J133qknn3xShw8fVvPmzfXNN9/oiy++0IQJE7It21V///vf9dZbb2nEiBHatm2batasqSVLluj777/X7NmzC+ReM+nSGanLf+urJBg1apReeeUVRUVFafTo0YqPj9e8efPUuHFjx++lFYUlS5aoXLlyjsEeVq5cqe+//17NmzfX4sWLr9h3zJgxOnXqlDp06KDq1avryJEjeuONN9SiRQvHvWctWrSQh4eHXnzxRSUmJsrHx0cdOnTQbbfdpooVK2r48OF6+OGHZbPZ9NFHH13TZYLDhg3Thx9+qIkTJ+rHH39U27Ztde7cOX377bd68MEH1atXL7Vr107333+/Zs6cqR07dqhz587y8vLSvn37tHjxYr322mu6++679cEHH+jNN99Unz59VLt2bZ09e1bvvPOOAgMD1a1bN5drBCCGAAeuZ1cbljprGOjFixfnOH/79u2mb9++JigoyPj4+JgaNWqY/v37m9WrVzu1W79+vWnZsqXx9vY2N9xwg5k3b16OQx2fP3/ejB492pQvX94EBASY/v37m/j4+GxDgBtjzMmTJ83YsWNNeHi48fLyMmFhYaZjx47m7bffvmr9uQ03/t1335m77rrLBAQEmLJly5pmzZrlOIT08ePHjYeHh6lXr16O2yUnlw+37u3tbcLCwsxdd91lXnvtNaehprNcvo1Wr15tevXqZapWrWq8vb1N1apVzaBBg8zvv//u1O+LL74wjRo1Mp6enk6vs127dqZx48Y51pfbEOALFy40U6ZMMaGhocbPz890797dadjoLLNmzTLVqlUzPj4+pk2bNmbr1q05Dh+dW22XD9tsjDFnz541jzzyiKlatarx8vIydevWNS+//LLTsOzGXBoie+zYsdlqym1o8sudPHnSjBw50gQHBxtvb2/TtGnTHIcpd2UI8CvJzxDgeXl9uQ0BnlMdOS0z633x8ssvO03/+OOPzQ033GC8vb1NixYtzMqVK3MdAvzyvrm9B/MyJL4x/7c9sh6+vr6mevXqpkePHub999/PcQjxy2tbsmSJ6dy5swkNDTXe3t4mIiLC3H///eb48eNO/d555x1zww03OH6eIGs48O+//97ceuutxs/Pz1StWtU8+uijjmHULx8uPaf3V07H9vnz582TTz5patWq5fj8uvvuu82BAwec2r399tumZcuWxs/PzwQEBJimTZuaRx991Bw7dswYc+knCAYNGmQiIiKMj4+PCQ0NNT169DBbt2694nYFcHU2Y4rB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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Vegetation and Impervious"
      ],
      "metadata": {
        "id": "rAhb530cmRHN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Boxplot for Vegetation and Impervious\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(data=data_cleaned[['Vegetation', 'Impervious']])\n",
        "plt.title('Boxplot for Vegetation and Impervious Surface')\n",
        "plt.ylabel('Value')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ykR8dsECmf3J",
        "outputId": "29c1a6ef-f0cc-4429-aecc-b474737483eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Histogram for Vegetation\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.histplot(data=data_cleaned, x='Vegetation', kde=True, color='green')\n",
        "plt.title('Histogram for Vegetation')\n",
        "plt.xlabel('Vegetation')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7NDazCgWmv1q",
        "outputId": "c7e773d4-dd71-4201-c2eb-860f56328a00"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Histogram for Impervious Surface\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.histplot(data=data_cleaned, x='Impervious', kde=True, color='red')\n",
        "plt.title('Histogram for Impervious Surface')\n",
        "plt.xlabel('Impervious Surface')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A-b3LjmynAnL",
        "outputId": "5d993d09-be95-4189-8999-63157e401e72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA+0AAAIjCAYAAAB20vpjAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABtDElEQVR4nO3dd1xW5f/H8ffNRgQBAQHFvffKkZqalqNMzUpNS1OzoeVoff21tIVlmmWWTa3MUktbpuVKG2aKoqm4NUxw4EJQELjP748Tt94CDkTvA7yej8f14Kz73J9zH+7yzbnOdWyGYRgCAAAAAACW4+bqAgAAAAAAQO4I7QAAAAAAWBShHQAAAAAAiyK0AwAAAABgUYR2AAAAAAAsitAOAAAAAIBFEdoBAAAAALAoQjsAAAAAABZFaAcAAAAAwKII7QCAAlGxYkUNHDjQ1WUUSpmZmXryyScVFRUlNzc39ejRw9UlFQl79+6VzWbTjBkzXF2KJaSkpGjIkCEKDw+XzWbTyJEjXV0SAOASENoBADnMmDFDNptNa9euzXV9u3btVLdu3St+nx9//FFjx4694v0Udh9//LEmTJigO+64Q5988olGjRp1Vd+voM4frsyZM2f05ptvqlGjRgoICFBgYKDq1KmjoUOHauvWrQX+fq+88opmzJihhx56SJ999pnuueeeAn8PAEDB83B1AQCAomHbtm1yc7u8vwX/+OOPmjp1arEP7suWLVPZsmX1xhtvuLqUIqVChQo6ffq0PD09XV1Krnr16qWFCxeqb9++uv/++5WRkaGtW7fqhx9+0PXXX6+aNWsW6PstW7ZMLVq00PPPP1+g+wUAXF2EdgBAgfD29nZ1CZctNTVVfn5+ri5Dhw4dUmBgYIHtz26368yZM/Lx8SmwfVrB5R6XzWaz7GewZs0a/fDDD3r55Zf1f//3f07r3n77bR0/frxA3ufcz+zQoUOqXbt2gewXAHDt0D0eAFAgzr+nPSMjQ+PGjVO1atXk4+Oj0qVLq3Xr1lq8eLEkaeDAgZo6daokM1xlt2ypqal67LHHFBUVJW9vb9WoUUOvv/66DMNwet/Tp0/r0UcfVUhIiPz9/XXbbbdp//79stlsTlfwx44dK5vNpi1btujuu+9WUFCQWrduLUnauHGjBg4cqMqVK8vHx0fh4eEaNGiQjhw54vRe2fvYvn27+vfvr1KlSik0NFTPPvusDMPQvn371L17dwUEBCg8PFwTJ0684GeWfc/18uXLtXnzZsdn8Msvv1zWZ2Cz2TR8+HB9/vnnqlOnjry9vbVo0aKLn7Rc9jF37lzVrl1bvr6+atmypf7++29J0nvvvaeqVavKx8dH7dq10969e51en93lPiYmRtdff718fX1VqVIlTZs2Lcd7paen6/nnn1fVqlXl7e2tqKgoPfnkk0pPT7/ocX3//fcKDg7Wfffdl2O/ycnJ8vHx0eOPP+70+Z5/T/uyZcvUpk0b+fn5KTAwUN27d1dcXJzTNgMHDlTFihVzvEf278C5Fi9erNatWyswMFAlS5ZUjRo1cgTx8+3atUuS1KpVqxzr3N3dVbp06XzVktfvgs1m0549e7RgwQLH79nevXt15swZPffcc2rSpIlKlSolPz8/tWnTRsuXL8/xfna7XW+++abq1asnHx8fhYaGqnPnzjluo5k5c6aaNGkiX19fBQcHq0+fPtq3b98FPw8AQN640g4AyNOJEyeUlJSUY3lGRsZFXzt27FhFR0dryJAhatasmZKTk7V27VqtW7dON910kx544AElJCRo8eLF+uyzz5xeaxiGbrvtNi1fvlyDBw9Ww4YN9dNPP+mJJ57Q/v37nbqRDxw4UHPmzNE999yjFi1aaMWKFbrlllvyrOvOO+9UtWrV9MorrzjC7+LFi7V7927dd999Cg8P1+bNm/X+++9r8+bN+vPPP3MEo969e6tWrVoaP368FixYoJdeeknBwcF67733dOONN+rVV1/V559/rscff1zXXXedbrjhhlxrCQ0N1WeffaaXX35ZKSkpio6OliTVqlXrsj4DyQyic+bM0fDhwxUSEpJryLuYX3/9Vd99952GDRsmSYqOjtatt96qJ598Uu+8844efvhhHTt2TK+99poGDRqkZcuWOb3+2LFj6tq1q+666y717dtXc+bM0UMPPSQvLy8NGjRIkhn8brvtNv32228aOnSoatWqpb///ltvvPGGtm/frm+++eaCx1WtWjX17NlT8+bN03vvvScvLy/Htt98843S09PVp0+fPI9xyZIl6tKliypXrqyxY8fq9OnTmjJlilq1aqV169Zd9ue2efNm3Xrrrapfv75eeOEFeXt7a+fOnfr9998v+LoKFSpIkj7//HO1atVKHh4F90+y8z+ziIgIffbZZxo1apTKlSunxx57TJL5+5ecnKwPP/zQ0UX/5MmT+uijj9SpUyf99ddfatiwoWO/gwcP1owZM9SlSxcNGTJEmZmZ+vXXX/Xnn3+qadOmkqSXX35Zzz77rO666y4NGTJEhw8f1pQpU3TDDTdo/fr1BdqjBACKDQMAgPNMnz7dkHTBVqdOHafXVKhQwRgwYIBjvkGDBsYtt9xywfcZNmyYkdv/ir755htDkvHSSy85Lb/jjjsMm81m7Ny50zAMw4iJiTEkGSNHjnTabuDAgYYk4/nnn3cse/755w1JRt++fXO836lTp3Is++KLLwxJxsqVK3PsY+jQoY5lmZmZRrly5QybzWaMHz/esfzYsWOGr6+v02eSl7Zt2+b4PC/1MzAMw5BkuLm5GZs3b77oe+X1fpIMb29vY8+ePY5l7733niHJCA8PN5KTkx3Lx4wZY0hy2rZt27aGJGPixImOZenp6UbDhg2NsLAw48yZM4ZhGMZnn31muLm5Gb/++qvT+0+bNs2QZPz+++8XPa6ffvrJkGR8//33Tsu7du1qVK5c2TG/Z88eQ5Ixffp0x7Lseo4cOeJYtmHDBsPNzc249957HcsGDBhgVKhQ4fyPzvE7kO2NN94wJBmHDx/Ose2F2O12x2dWpkwZo2/fvsbUqVONf/75J8e2l1qLYVz4d6FChQo5vpOZmZlGenq607Jjx44ZZcqUMQYNGuRYtmzZMkOS8eijj+Z6LIZhGHv37jXc3d2Nl19+2Wn933//bXh4eORYDgC4NHSPBwDkaerUqVq8eHGOVr9+/Yu+NjAwUJs3b9aOHTsu+31//PFHubu769FHH3Va/thjj8kwDC1cuFCSHF3AH374YaftHnnkkTz3/eCDD+ZY5uvr65hOS0tTUlKSWrRoIUlat25dju2HDBnimHZ3d1fTpk1lGIYGDx7sWB4YGKgaNWpo9+7dedZyIZf6GWRr27btFd+v3KFDB6crzc2bN5dkDpjm7++fY/n5x+bh4aEHHnjAMe/l5aUHHnhAhw4dUkxMjCRp7ty5qlWrlmrWrKmkpCRHu/HGGyUpR7fs3I7rxhtvVEhIiGbPnu1YduzYMS1evFi9e/fO8/gSExMVGxurgQMHKjg42LG8fv36uummm/Tjjz/m/eHkIfvK8bfffiu73X7Jr7PZbPrpp5/00ksvKSgoSF988YWGDRumChUqqHfv3ld0T/vl/C64u7s7eivY7XYdPXpUmZmZatq0qdPv/tdffy2bzZbrIHbZPVHmzZsnu92uu+66y+nchoeHq1q1arl2uQcAXByhHQCQp2bNmqljx445WlBQ0EVf+8ILL+j48eOqXr266tWrpyeeeEIbN268pPf9559/FBkZ6RQUJbPbePb67J9ubm6qVKmS03ZVq1bNc9/nbytJR48e1YgRI1SmTBn5+voqNDTUsd2JEydybF++fHmn+VKlSsnHx0chISE5lh87dizPWi7kUj+DbLkd1+XK7bgkKSoqKtfl5x9bZGRkjoH9qlevLkmOe+B37NihzZs3KzQ01Kllb3fo0CGn1+d2XB4eHurVq5e+/fZbx33w8+bNU0ZGxgVDe/ZnVqNGjRzratWqpaSkJKWmpub5+tz07t1brVq10pAhQ1SmTBn16dNHc+bMuaQA7+3traefflpxcXFKSEjQF198oRYtWji6tufX5f4ufPLJJ6pfv75j7InQ0FAtWLDA6Xd/165dioyMdPpjx/l27NghwzBUrVq1HOc3Li4ux7kFAFwa7mkHAFwVN9xwg3bt2qVvv/1WP//8sz788EO98cYbmjZtmtOV6mvt3Kvq2e666y798ccfeuKJJ9SwYUOVLFlSdrtdnTt3zjV8ubu7X9IySTkGjbtacjuuy5XXMRTksdntdtWrV0+TJk3Kdf35fyDI67j69Omj9957TwsXLlSPHj00Z84c1axZUw0aNLjsmnJz/jgG2bKysnLUt3LlSi1fvlwLFizQokWLNHv2bN144436+eef8/zszhcREaE+ffqoV69eqlOnjubMmaMZM2bIw8Pjkms5t6ZLNXPmTA0cOFA9evTQE088obCwMLm7uys6OtoxWN6lstvtstlsWrhwYa7HXbJkycvaHwDARGgHAFw12aN833fffUpJSdENN9ygsWPHOkJ7XmGkQoUKWrJkiU6ePOl0pXnr1q2O9dk/7Xa79uzZo2rVqjm227lz5yXXeOzYMS1dulTjxo3Tc88951ien279BelSPwMrSUhIyPEYve3bt0uSo9t9lSpVtGHDBnXo0CHP838pbrjhBkVERGj27Nlq3bq1li1bpqeffvqCr8n+zLZt25Zj3datWxUSEuKoPSgoKNcu6uf3cJAkNzc3dejQQR06dNCkSZP0yiuv6Omnn9by5cvVsWPHyzou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x/K7775bM2fO1PLlyzVmzBh99tln6t+//wX3FR0drVKlSjlaVFTU1S4fAK6thg2lefPMQeq6dzcfC/f551Lt2tI995gjzwMAAMDyPFxdwKUaNmyYNm3apN9++81p+dChQx3T9erVU0REhDp06KBdu3apSpUque5rzJgxGj16tGM+OTmZ4A7AMuIK+j70556T7513KuKDDxS4YoU0c6aMWbN0tHNnHbzvPqVVrlygbxcSEqLy5csX6D4BAACKq0IR2ocPH64ffvhBK1euVLly5S64bfPmzSVJO3fuzDO0e3t7y9vbu8DrBIArkZiSIpt00d5CV6KxpLGSutntKv3jjyr944+aLyla0poCeo8Svr6K27qV4A4AAFAALB3aDcPQI488ovnz5+uXX35RpUqVLvqa2NhYSVJERMRVrg4ACtbxtDQZkt5u314tq1W7qu+19fBhlVm/XkF796qnpJ6SkiMjdbBhQ50sW1ay2fK137jDh9V//nwlJSUR2gEAAAqApUP7sGHDNGvWLH377bfy9/fXgQMHJEmlSpWSr6+vdu3apVmzZqlr164qXbq0Nm7cqFGjRumGG25Q/fr1XVw9AORP1aAgNb7af3iMiJDq15cOH5Z+/136+28FJCQoICFBioyUWreWatbMd3gHAABAwbB0aH/33XclSe3atXNaPn36dA0cOFBeXl5asmSJJk+erNTUVEVFRalXr1565plnXFAtABRCoaFSjx5Su3bSH3+Yo84nJEhz5pjPgL/+eqlePcnD0v+7AAAAKLIs/a8wwzAuuD4qKkorVqy4RtUAQBEWGCh17Sq1bSv9+ae0Zo2UlCR99520dKnUtKl03XWSn5+rKwUAAChWLB3aAQDXmJ+f1KGD1KqVFBMj/fWXlJwsrVgh/fab2aW+RQspLMzVlQIAABQLhHYAQE4+PmZwb9FCioszr77v3292n1+/XqpSxVxXpQr3vQMAAFxFhHYAQN7c3aW6daU6daR//zXDe1yctGuX2UJCzK7zDRqYQR8AAAAFitAOALg4m02KijLbsWNmt/l168z73hctMu97r1dPvhUrurpSAACAIoXQDgC4PEFBUqdO5ojzGzeag9YdPiytW6da69bpD0nBCxZItWtz9R0AAOAKubm6AABAIeXtbY4o/9BD0sCBUt26sru5qaWkis89J5UrJz3xhLR9u6srBQAA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DRs2TBLfIVfLysrSs88+q0qVKsnX11dVqlTRiy++qHPHTi+O3yFCeyEwe/ZsjR49Ws8//7zWrVunBg0aqFOnTjp06JCrSyuWUlNT1aBBA02dOjXX9a+99preeustTZs2TatXr5afn586deqktLS0a1xp8bRixQoNGzZMf/75pxYvXqyMjAzdfPPNSk1NdWwzatQoff/995o7d65WrFihhIQE3X777S6suvgoV66cxo8fr5iYGK1du1Y33nijunfvrs2bN0vi3FjJmjVr9N5776l+/fpOyzlHrlenTh0lJiY62m+//eZYx/lxrWPHjqlVq1by9PTUwoULtWXLFk2cOFFBQUGObfh3gmutWbPG6fuzePFiSdKdd94pie+Qq7366qt699139fbbbysuLk6vvvqqXnvtNU2ZMsWxTbH8DhmwvGbNmhnDhg1zzGdlZRmRkZFGdHS0C6uCYRiGJGP+/PmOebvdboSHhxsTJkxwLDt+/Ljh7e1tfPHFFy6oEIcOHTIkGStWrDAMwzwfnp6exty5cx3bxMXFGZKMVatWuarMYi0oKMj48MMPOTcWcvLkSaNatWrG4sWLjbZt2xojRowwDIPvjxU8//zzRoMGDXJdx/lxvaeeespo3bp1nuv5d4L1jBgxwqhSpYpht9v5DlnALbfcYgwaNMhp2e23327069fPMIzi+x3iSrvFnTlzRjExMerYsaNjmZubmzp27KhVq1a5sDLkZs+ePTpw4IDT+SpVqpSaN2/O+XKREydOSJKCg4MlSTExMcrIyHA6RzVr1lT58uU5R9dYVlaWvvzyS6Wmpqply5acGwsZNmyYbrnlFqdzIfH9sYodO3YoMjJSlStXVr9+/RQfHy+J82MF3333nZo2bao777xTYWFhatSokT744APHev6dYC1nzpzRzJkzNWjQINlsNr5DFnD99ddr6dKl2r59uyRpw4YN+u2339SlSxdJxfc75OHqAnBhSUlJysrKUpkyZZyWlylTRlu3bnVRVcjLgQMHJCnX85W9DteO3W7XyJEj1apVK9WtW1eSeY68vLwUGBjotC3n6Nr5+++/1bJlS6WlpalkyZKaP3++ateurdjYWM6NBXz55Zdat26d1qxZk2Md3x/Xa968uWbMmKEaNWooMTFR48aNU5s2bbRp0ybOjwXs3r1b7777rkaPHq3/+7//05o1a/To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PfDAA4qNjXW0DRs2aMeOHapSpYpjOz8/vxyv7devn7766itlZGRo1qxZqlevntMfES6Xm5tbjq7u2d34JfMPFYsXL9bChQtVu3ZtTZkyRTVq1HD640JuqlSpoiFDhujDDz/UunXrtGXLFs2ePfuS3jNbbsd/vr179+rWW29V/fr19fXXXysmJsZx//yZM2ckSb6+vnm+Pvve9wULFjidjy1btnBfOwDgqiG0AwDgYn/++adj+tixY9q+fbtq1aolSWrcuLG2bNmiqlWr5mgXGyG+e/fuSktL06JFizRr1qw8r7JLUq1atbRv3z7t27fPsWzLli06fvy4ateuLcm8ep+YmOj0utjYWKd5m82mVq1aady4cVq/fr28vLw0f/78S/ocJHNwvBIlSjgGr7uU97xUMTExstvtmjhxolq0aKHq1asrISHBaZv69etr6dKlub6+du3a8vb2Vnx8fI5zcW4PBQAAChKPfAMAwMVeeOEFlS5dWmXKlNHTTz+tkJAQx4jpTz31lFq0aKHhw4dryJAh8vPzczwW7e23377gfv38/NSjRw89++yziouLU9++ffPctmPHjqpXr5769eunyZMnKzMzUw8//LDatm3r6Hp/4403asKECfr000/VsmVLzZw5U5s2bVKjRo0kSatXr9bSpUt18803KywsTKtXr9bhw4cdf4A439ixY3Xq1Cl17dpVFSpU0PHjx/XWW28pIyNDN9100yW95+WoWrWqMjIyNGXKFHXr1s0xaN25xowZo3r16unhhx/Wgw8+KC8vLy1fvlx33nmnQkJC9Pjjj2vUqFGy2+1q3bq1Tpw4od9//10BAQEaMGDAZdcEAMDFcKUdAAAXGz9+vEaMGKEmTZrowIED+v777x1X0evXr68VK1Zo+/btatOmjRo1aqTnnntOkZGRl7Tvfv36acOGDWrTpo3Kly+f53Y2m03ffvutgoKCdMMNN6hjx46qXLmyo5u6JHXq1EnPPvusnnzySV133XU6efKk7r33Xsf6gIAArVy5Ul27dlX16tX1zDPPaOLEierSpUuu79m2bVvt3r1b9957r2rWrKkuXbrowIED+vnnn1WjRo1Les/L0aBBA02aNEmvvvqq6tatq88//1zR0dFO21SvXl0///yzNmzYoGbNmqlly5b69ttv5eFhXud48cUX9eyzzyo6Olq1atVS586dtWDBAlWqVClfNQEAcDE24/wbxQAAwDXxyy+/qH379jp27JgCAwNdXQ4AALAgrrQDAAAAAGBRhHYAAAAAACyK7vEAAAAAAFgUV9oBAAAAALAoQjsAAAAAABZFaAcAAAAAwKII7QAAAAAAWBShHQAAAAAAiyK0AwAAAABgUYR2AAAAAAAsitAOAAAAAIBF/T+EkJA/3x6adgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "47e8uyaQ3Xs0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#LSTS"
      ],
      "metadata": {
        "id": "xKoWZQXNwllg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lsts= data['ECO_L2T_LSTE_002_LST']\n",
        "print(lsts.mean())\n",
        "aoi_avg_lst = data.groupby(['latitude', 'longitude'])['ECO_L2T_LSTE_002_LST'].mean().reset_index()\n",
        "print(aoi_avg_lst)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uQLx2-RjvXow",
        "outputId": "d6e7ee40-53a1-49f9-e1f5-4ebe330b4b7b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "296.7327686716247\n",
            "      latitude  longitude  ECO_L2T_LSTE_002_LST\n",
            "0    30.285826 -97.718805            304.299988\n",
            "1    30.285826 -97.713597            289.500000\n",
            "2    30.285826 -97.708390            294.440002\n",
            "3    30.285826 -97.703183            302.100006\n",
            "4    30.285826 -97.697975            282.040008\n",
            "..         ...        ...                   ...\n",
            "439  30.556676 -97.749311            314.380005\n",
            "440  30.556676 -97.744091            288.200012\n",
            "441  30.556676 -97.738870            302.959992\n",
            "442  30.556676 -97.733650            304.019989\n",
            "443  30.556676 -97.728429            311.220001\n",
            "\n",
            "[444 rows x 3 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "plt.scatter(data['Median Income_LST'], lsts, alpha=0.5, c='blue')\n",
        "plt.xlabel('Median Income')\n",
        "plt.ylabel('Average LST')\n",
        "plt.title('Median Income vs. Average LST')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "Y7YePPsf1pYx",
        "outputId": "560a047e-2447-4446-cc19-d2f87916887c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(data=data_cleaned['LST'])\n",
        "plt.title('Boxplot for Vegetation and Impervious Surface')\n",
        "plt.ylabel('Value')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "collapsed": true,
        "id": "4DLyS5DD_hKA",
        "outputId": "8102cb88-d049-4af6-ace3-5bca2967c919"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'LST'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3652\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3653\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3654\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'LST'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-19-731663f7bb72>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mboxplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata_cleaned\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'LST'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Boxplot for Vegetation and Impervious Surface'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Value'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3759\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3760\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3761\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3762\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3763\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3653\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3654\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3655\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3656\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3657\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'LST'"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Model Training: K-Means"
      ],
      "metadata": {
        "id": "pleuq7arlaL_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Clustering:"
      ],
      "metadata": {
        "id": "7qeFeBhKHn3L"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "K-means:"
      ],
      "metadata": {
        "id": "TvT2KQ85HpUB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import KMeans\n",
        "from sklearn.metrics import silhouette_score, davies_bouldin_score, calinski_harabasz_score\n",
        "# Define the range of cluster numbers to evaluate\n",
        "cluster_numbers = [2, 3, 4, 5]\n",
        "\n",
        "# Initialize lists to store the scores\n",
        "silhouette_scores = []\n",
        "davies_bouldin_scores = []\n",
        "calinski_harabasz_scores = []\n",
        "\n",
        "# Evaluate the metrics for each number of clusters\n",
        "for n_clusters in cluster_numbers:\n",
        "    kmeans = KMeans(n_clusters=n_clusters, n_init=10)\n",
        "    cluster_labels = kmeans.fit_predict(data_normalized)\n",
        "\n",
        "    silhouette_avg = silhouette_score(data_normalized, cluster_labels)\n",
        "    davies_bouldin_avg = davies_bouldin_score(data_normalized, cluster_labels)\n",
        "    calinski_harabasz_avg = calinski_harabasz_score(data_normalized, cluster_labels)\n",
        "\n",
        "    silhouette_scores.append(silhouette_avg)\n",
        "    davies_bouldin_scores.append(davies_bouldin_avg)\n",
        "    calinski_harabasz_scores.append(calinski_harabasz_avg)\n",
        "\n",
        "# Plot the evaluation metrics\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "plt.subplot(3, 1, 1)\n",
        "plt.plot(cluster_numbers, silhouette_scores, marker='o')\n",
        "plt.title('Silhouette Score for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Silhouette Score')\n",
        "\n",
        "plt.subplot(3, 1, 2)\n",
        "plt.plot(cluster_numbers, davies_bouldin_scores, marker='o', color='orange')\n",
        "plt.title('Davies-Bouldin Index for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Davies-Bouldin Index')\n",
        "\n",
        "plt.subplot(3, 1, 3)\n",
        "plt.plot(cluster_numbers, calinski_harabasz_scores, marker='o', color='green')\n",
        "plt.title('Calinski-Harabasz Index for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Calinski-Harabasz Index')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 648
        },
        "id": "ZJGBpNdVbwUb",
        "outputId": "f52b9883-6cb8-4d08-b893-ed218d3401aa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import KMeans\n",
        "\n",
        "# Define the model with n_init parameter for 3 clusters\n",
        "kmeans = KMeans(n_clusters=2, n_init=10)\n",
        "\n",
        "# Fit the model\n",
        "kmeans.fit(data_normalized)\n",
        "\n",
        "# Predict the clusters and add to data_cleaned\n",
        "data_cleaned['Cluster'] = kmeans.predict(data_normalized)\n"
      ],
      "metadata": {
        "id": "_cwbaASeNaca"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "KjqnRigSN1is",
        "outputId": "275b0ba4-75bf-49e0-9c2a-739fc01e9eef"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude   latitude  Impervious  Median_Income   Avg_Income  Vegetation  \\\n",
              "0 -97.764672  30.498494          24         117987  90641.59459          70   \n",
              "1 -97.777717  30.487252           0          61777  90641.59459         100   \n",
              "2 -97.777717  30.491749           0          61777  90641.59459         100   \n",
              "3 -97.777717  30.496245          19          61777  90641.59459          46   \n",
              "4 -97.777717  30.500742           7          61777  90641.59459          41   \n",
              "\n",
              "   Cluster  \n",
              "0        0  \n",
              "1        0  \n",
              "2        0  \n",
              "3        0  \n",
              "4        0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-16844377-1366-4298-b7e8-9394714a94aa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious</th>\n",
              "      <th>Median_Income</th>\n",
              "      <th>Avg_Income</th>\n",
              "      <th>Vegetation</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>24</td>\n",
              "      <td>117987</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>19</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>7</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16844377-1366-4298-b7e8-9394714a94aa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-16844377-1366-4298-b7e8-9394714a94aa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-16844377-1366-4298-b7e8-9394714a94aa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-19f24fbb-5da0-4edd-87f8-f1e138241351\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-19f24fbb-5da0-4edd-87f8-f1e138241351')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-19f24fbb-5da0-4edd-87f8-f1e138241351 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_cleaned",
              "summary": "{\n  \"name\": \"data_cleaned\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07818248554734678,\n        \"min\": -97.99799409,\n        \"max\": -97.692768,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -97.75750941,\n          -97.764672,\n          -97.7646826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09257915312529016,\n        \"min\": 30.285826,\n        \"max\": 30.5566761,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          30.43144153,\n          30.498494,\n          30.40338919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 81,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          24,\n          15,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76075,\n        \"min\": 28439,\n        \"max\": 300000,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          117987,\n          61777,\n          28439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67268.19757219934,\n        \"min\": 49128.7027,\n        \"max\": 300000.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          85173.54054,\n          300000.0,\n          117987.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          37,\n          54,\n          53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Ensure only numeric columns are selected for analysis\n",
        "numeric_columns = data_cleaned.select_dtypes(include=[float, int]).columns\n",
        "\n",
        "# Analyze the clusters\n",
        "cluster_analysis = data_cleaned.groupby('Cluster')[numeric_columns].mean()\n",
        "print(cluster_analysis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DAsIYjcePAFY",
        "outputId": "819b65a5-0ca3-496e-97fd-58178a8b94bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "         longitude   latitude  Impervious  Median_Income     Avg_Income  \\\n",
            "Cluster                                                                   \n",
            "0       -97.744174  30.458151   13.121622  101116.086486  111356.128373   \n",
            "1       -97.937665  30.312330    8.540541  209205.000000  209205.000000   \n",
            "\n",
            "         Vegetation  Cluster  \n",
            "Cluster                       \n",
            "0         47.440541      0.0  \n",
            "1         77.175676      1.0  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define labels for clusters (assuming cluster 0 is low risk, 1 is medium risk, and 2 is high risk based on analysis)\n",
        "labels = {1: 'Low Risk', 0: 'High Risk'}\n",
        "\n",
        "# Map the labels\n",
        "data_cleaned['Risk'] = data_cleaned['Cluster'].map(labels)\n",
        "\n",
        "# Visualize the clusters with labels\n",
        "plt.figure(figsize=(10, 6))\n",
        "colors = {'Low Risk': 'purple', 'Medium Risk': 'blue', 'High Risk': 'yellow'}\n",
        "plt.scatter(data_cleaned['longitude'], data_cleaned['latitude'], c=data_cleaned['Risk'].apply(lambda x: colors[x]), marker='o')\n",
        "plt.title('K-means Clustering of Urban Heat Islands')\n",
        "plt.xlabel('Longitude')\n",
        "plt.ylabel('Latitude')\n",
        "plt.legend(handles=[plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=colors[label], markersize=10, label=label) for label in labels.values()],\n",
        "           title='Risk Level')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "hgT8PRqyPJg2",
        "outputId": "4c62332a-33da-4bae-d59a-33e388f694d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Bar plot for Median Income and Average Income\n",
        "income_features = ['Median_Income', 'Avg_Income']\n",
        "income_means = data_cleaned.groupby('Risk')[income_features].mean()\n",
        "\n",
        "income_means.plot(kind='bar', figsize=(12, 8))\n",
        "plt.title('Mean Income Values by Risk Level')\n",
        "plt.ylabel('Mean Value')\n",
        "plt.xlabel('Risk Level')\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "A6UWhmeXPTpu",
        "outputId": "2abcecf2-1d56-43e0-d02b-65e0ea863c00"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Bar plot for Impervious Surface and Vegetation\n",
        "environmental_features = ['Impervious', 'Vegetation']\n",
        "environmental_means = data_cleaned.groupby('Risk')[environmental_features].mean()\n",
        "\n",
        "environmental_means.plot(kind='bar', figsize=(12, 8))\n",
        "plt.title('Mean Environmental Values by Risk Level')\n",
        "plt.ylabel('Mean Value')\n",
        "plt.xlabel('Risk Level')\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "WnX1tSjTR1W-",
        "outputId": "acb7332c-9b84-4f70-b02f-beebb33054ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quality of k-means model\n",
        "# Calculate the silhouette score\n",
        "sil_score = silhouette_score(data_normalized, kmeans.labels_)\n",
        "print(f'Silhouette Score: {sil_score}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CkwTUr0aQViP",
        "outputId": "17a2d174-5007-4db3-8593-3326250cb8d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Silhouette Score: 0.4455149310414014\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "em61BeOgQkl9"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "orvNCQW2PXef"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Model Training: DBSCAN"
      ],
      "metadata": {
        "id": "MTCsZFuY1Jz7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Clustering: DBSCAN"
      ],
      "metadata": {
        "id": "YCp0sitI1J0H"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove rows with missing values\n",
        "data_cleaned = data_selected.dropna()\n",
        "\n",
        "# Display the first few rows of the cleaned dataset\n",
        "data_cleaned.head()"
      ],
      "metadata": {
        "id": "edRdtfPe1J0I",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "52faac78-6302-4bf1-85a4-bb3b9a4a0452"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   longitude   latitude  Impervious Surface (no building)  Median Income_LST  \\\n",
              "0 -97.764672  30.498494                                24             117987   \n",
              "1 -97.777717  30.487252                                 0              61777   \n",
              "2 -97.777717  30.491749                                 0              61777   \n",
              "3 -97.777717  30.496245                                19              61777   \n",
              "4 -97.777717  30.500742                                 7              61777   \n",
              "\n",
              "   Average Income_LST  Vegetation  \n",
              "0         90641.59459          70  \n",
              "1         90641.59459         100  \n",
              "2         90641.59459         100  \n",
              "3         90641.59459          46  \n",
              "4         90641.59459          41  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b59b44be-cd33-463a-a69f-7fa76a3caa2e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>longitude</th>\n",
              "      <th>latitude</th>\n",
              "      <th>Impervious Surface (no building)</th>\n",
              "      <th>Median Income_LST</th>\n",
              "      <th>Average Income_LST</th>\n",
              "      <th>Vegetation</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-97.764672</td>\n",
              "      <td>30.498494</td>\n",
              "      <td>24</td>\n",
              "      <td>117987</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.487252</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.491749</td>\n",
              "      <td>0</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.496245</td>\n",
              "      <td>19</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-97.777717</td>\n",
              "      <td>30.500742</td>\n",
              "      <td>7</td>\n",
              "      <td>61777</td>\n",
              "      <td>90641.59459</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b59b44be-cd33-463a-a69f-7fa76a3caa2e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b59b44be-cd33-463a-a69f-7fa76a3caa2e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b59b44be-cd33-463a-a69f-7fa76a3caa2e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-daa531c5-3218-4a4d-89d9-d74ef3ef85c5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-daa531c5-3218-4a4d-89d9-d74ef3ef85c5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-daa531c5-3218-4a4d-89d9-d74ef3ef85c5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_cleaned",
              "summary": "{\n  \"name\": \"data_cleaned\",\n  \"rows\": 444,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07818248554734678,\n        \"min\": -97.99799409,\n        \"max\": -97.692768,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          -97.75750941,\n          -97.764672,\n          -97.7646826\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09257915312529016,\n        \"min\": 30.285826,\n        \"max\": 30.5566761,\n        \"num_unique_values\": 84,\n        \"samples\": [\n          30.43144153,\n          30.498494,\n          30.40338919\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impervious Surface (no building)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 81,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          24,\n          15,\n          39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Median Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76075,\n        \"min\": 28439,\n        \"max\": 300000,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          117987,\n          61777,\n          28439\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Income_LST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67268.19757219934,\n        \"min\": 49128.7027,\n        \"max\": 300000.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          85173.54054,\n          300000.0,\n          117987.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vegetation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          37,\n          54,\n          53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_cleaned.info()"
      ],
      "metadata": {
        "id": "-b8H52Qz1J0I",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e04f31fe-49c3-4341-f04c-9d9df4de2ca7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 444 entries, 0 to 443\n",
            "Data columns (total 6 columns):\n",
            " #   Column                            Non-Null Count  Dtype  \n",
            "---  ------                            --------------  -----  \n",
            " 0   longitude                         444 non-null    float64\n",
            " 1   latitude                          444 non-null    float64\n",
            " 2   Impervious Surface (no building)  444 non-null    int64  \n",
            " 3   Median Income_LST                 444 non-null    int64  \n",
            " 4   Average Income_LST                444 non-null    float64\n",
            " 5   Vegetation                        444 non-null    int64  \n",
            "dtypes: float64(3), int64(3)\n",
            "memory usage: 20.9 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.neighbors import NearestNeighbors\n",
        "\n",
        "# Normalize the data\n",
        "scaler = StandardScaler()\n",
        "data_normalized = scaler.fit_transform(data_cleaned)\n",
        "\n",
        "# Convert normalized data back to DataFrame\n",
        "data_normalized = pd.DataFrame(data_normalized, columns=data_cleaned.columns)\n",
        "\n",
        "# Display the first few rows of the normalized dataset\n",
        "data_normalized.head()\n",
        "\n",
        "# Fit the model\n",
        "nearest_neighbors = NearestNeighbors(n_neighbors=5)\n",
        "neighbors = nearest_neighbors.fit(data_normalized)\n",
        "distances, indices = neighbors.kneighbors(data_normalized)\n",
        "\n",
        "# Sort the distances to the 5th nearest neighbor - helpful for better clustering results\n",
        "distances = np.sort(distances, axis=0)\n",
        "distances = distances[:, 4]\n",
        "\n",
        "# Plot the distances\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(distances)\n",
        "plt.title('K-distance Graph')\n",
        "plt.xlabel('Points sorted by distance to 5th nearest neighbor')\n",
        "plt.ylabel('5th nearest neighbor distance')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "LrCGfbpM1J0J",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "outputId": "cc318c02-fc30-4339-f777-076b61455240"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import DBSCAN\n",
        "\n",
        "# apply DBSCAN\n",
        "dbscan = DBSCAN(eps=1.467, min_samples=4)\n",
        "# 1.02 determined by iterating by 0.01 from 0.7 to 1.5 by iteratively calling\n",
        "# function for highest silhouette score\n",
        "# eps value is found from graph above - can adjust to tune for results\n",
        "data_cleaned['Cluster'] = dbscan.fit_predict(data_normalized)\n",
        "\n",
        "cluster_analysis = data_cleaned.groupby('Cluster').mean()\n",
        "\n",
        "# adjusting the label mapping to include all detected clusters\n",
        "unique_clusters = data_cleaned['Cluster'].unique()\n",
        "labels = {cluster: f'Cluster {cluster}' for cluster in unique_clusters}\n",
        "labels[-1] = 'Noise'  # assigning 'Noise' label to -1 cluster"
      ],
      "metadata": {
        "id": "I-uZb8BZGvKg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# map the labels\n",
        "data_cleaned['Risk'] = data_cleaned['Cluster'].map(labels)\n",
        "\n",
        "# visualize the clusters with labels\n",
        "plt.figure(figsize=(10, 6))\n",
        "colors = {f'Cluster {cluster}': plt.cm.tab20(i) for i, cluster in enumerate(unique_clusters)}\n",
        "colors['Noise'] = 'red'\n",
        "plt.scatter(data_cleaned['longitude'], data_cleaned['latitude'], c=data_cleaned['Risk'].apply(lambda x: colors[x]), marker='o')\n",
        "plt.title('DBSCAN Clustering of Urban Heat Islands')\n",
        "plt.xlabel('Longitude')\n",
        "plt.ylabel('Latitude')\n",
        "plt.legend(handles=[plt.Line2D([0], [0], marker='o', color='w', markerfacecolor=colors[label], markersize=10, label=label) for label in labels.values()],\n",
        "           title='Cluster')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "ohqd7NVb1J0J",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "outputId": "977eca12-d22a-4d68-8690-c9420732be38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# bar plot for Median Income and Average Income\n",
        "income_features = ['Median Income_LST', 'Average Income_LST']\n",
        "income_means = data_cleaned.groupby('Risk')[income_features].mean()\n",
        "\n",
        "income_means.plot(kind='bar', figsize=(12, 8))\n",
        "plt.title('Mean Income Values by Cluster')\n",
        "plt.ylabel('Mean Value')\n",
        "plt.xlabel('Cluster')\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "Wror_2i51J0J",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "outputId": "6736c5e6-17ec-49b0-c1ff-c7a06938f53d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# bar plot for Impervious Surface and Vegetation\n",
        "environmental_features = ['Impervious Surface (no building)', 'Vegetation']\n",
        "environmental_means = data_cleaned.groupby('Risk')[environmental_features].mean()\n",
        "\n",
        "environmental_means.plot(kind='bar', figsize=(12, 8))\n",
        "plt.title('Mean Environmental Values by Cluster')\n",
        "plt.ylabel('Mean Value')\n",
        "plt.xlabel('Cluster')\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "TurHW2Qy1J0J",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "outputId": "a7d15e9e-e3db-43bf-be2d-e5bce5d9ff79"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#quality of k-means model\n",
        "#a score closer to 1 means that the clusters are well separated\n",
        "#this is how we can compare the models\n",
        "from sklearn.metrics import silhouette_score\n",
        "\n",
        "# Calculate the silhouette score\n",
        "sil_score = silhouette_score(data_normalized, dbscan.labels_)\n",
        "sil_score"
      ],
      "metadata": {
        "id": "r9ldk9Li1J0M",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "28b2c614-94fe-455e-c941-52e385be6dcd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.3861087669705118"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "K-means clusters are moderately well-separated based on the silhouette score."
      ],
      "metadata": {
        "id": "_jFBzSa01J0M"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "9Ek_1Hmj1J0M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Model Training- Hierarchical"
      ],
      "metadata": {
        "id": "evq5yIx27hP3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Clustering-- Hierarchical"
      ],
      "metadata": {
        "id": "iZeo1U6Z714K"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import AgglomerativeClustering\n"
      ],
      "metadata": {
        "id": "gu4ikojs7jLb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "w2ndIP5AL2W9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d=data_cleaned #Data frame\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.scatterplot(x='Impervious', y='Median_Income',  data=d, palette='viridis')\n",
        "plt.title(f'Impervious Surface vs. Median Income')\n",
        "plt.xlabel('Impervious Surface')\n",
        "plt.ylabel('Median Income')\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.scatterplot(x='Impervious', y='Avg_Income', data=d, palette='viridis')\n",
        "plt.title(f'Impervious Surface vs. Average Income')\n",
        "plt.xlabel('Impervious Surface')\n",
        "plt.ylabel('Average Income')\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.scatterplot(x='Vegetation', y='Median_Income', data=d, palette='viridis')\n",
        "plt.title(f'Greenness vs. Median Income')\n",
        "plt.xlabel('Greenness')\n",
        "plt.ylabel('Median Income')\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.scatterplot(x='Vegetation', y='Avg_Income', data=d, palette='viridis')\n",
        "plt.title(f'Greenness vs. Average Income ')\n",
        "plt.xlabel('Greenness')\n",
        "plt.ylabel('Average Income')\n",
        "plt.show()\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.scatterplot(x='Vegetation', y='Impervious', data=d, palette='viridis')\n",
        "plt.title(f'Greenness vs. Impervious Surface ')\n",
        "plt.xlabel('Greenness')\n",
        "plt.ylabel('Impervious Surface')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "swUBxp8rNKWe",
        "collapsed": true
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "clustered_dataframes = {}\n",
        "data_clust_temp= data_cleaned.copy()\n",
        "\n",
        "for i in range(1, 6):\n",
        "    clustering = AgglomerativeClustering(n_clusters=i, linkage='ward').fit(data_normalized)\n",
        "    data_clust_temp[f'Cluster_{i}'] = clustering.labels_\n",
        "\n",
        "    clustered_dataframes[i] = data_clust_temp[['Median_Income', 'Avg_Income', 'Impervious', 'Vegetation', 'longitude', 'latitude', f'Cluster_{i}']].copy()\n",
        "    clustered_dataframes[i].rename(columns={f'Cluster_{i}': 'Cluster'}, inplace=True)\n",
        "\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    sns.scatterplot(x=data_cleaned['longitude'], y=data_cleaned['latitude'], hue=clustered_dataframes[i][f'Cluster'], palette='viridis')\n",
        "    plt.title(f'Hierarchical Clustering of AOI Points - {i} clusters')\n",
        "    plt.xlabel('Longitude')\n",
        "    plt.ylabel('Latitude')\n",
        "    plt.legend(title='Cluster')\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "oBk8UMj_DFJp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Agglomterative/Hierarchical clustering doesnt support noise detection and handling like DBSCAN"
      ],
      "metadata": {
        "id": "EpSw9R8vMbxt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "clustered_dataframes[4]"
      ],
      "metadata": {
        "collapsed": true,
        "id": "rgt-UnrSFVq5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1, 6):\n",
        "    cluster_data = clustered_dataframes[i]\n",
        "\n",
        "    plt.figure(figsize=(12, 6))\n",
        "\n",
        "    sns.pairplot(cluster_data, hue='Cluster', vars=['Median_Income', 'Avg_Income', 'Impervious', 'Vegetation'], palette='viridis')\n",
        "    plt.suptitle(f'Pairplot for Cluster Insights - {i} Clusters', y=1.02)\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "yFJ2dJ7pLCc7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\"\"\"for i in range(1, 6):\n",
        "    cluster_data = clustered_dataframes[i]\n",
        "\n",
        "    plt.figure(figsize=(12, 6))\n",
        "\n",
        "    cluster_means = cluster_data.groupby('Cluster').mean()\n",
        "\n",
        "    cluster_means[['LST']].plot(kind='bar', figsize=(14, 7))\n",
        "\n",
        "    plt.title(f'LST Values by Cluster {i}')\n",
        "\n",
        "    plt.ylabel('Mean Value')\n",
        "    plt.xlabel('Cluster')\n",
        "    plt.xticks(rotation=0)\n",
        "\n",
        "\n",
        "    plt.show()\"\"\""
      ],
      "metadata": {
        "collapsed": true,
        "id": "v2exHS66G7HT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1, 6):\n",
        "    cluster_data = clustered_dataframes[i]\n",
        "\n",
        "    plt.figure(figsize=(12, 6))\n",
        "\n",
        "    cluster_means = cluster_data.groupby('Cluster').mean()\n",
        "\n",
        "    cluster_means[['Median_Income', 'Avg_Income']].plot(kind='bar', figsize=(14, 7))\n",
        "\n",
        "    plt.title(f'Mean Income Values by Cluster {i}')\n",
        "\n",
        "    plt.ylabel('Mean Value')\n",
        "    plt.xlabel('Cluster')\n",
        "    plt.xticks(rotation=0)\n",
        "\n",
        "\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "PThdn1JID2U1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1, 6):\n",
        "    cluster_data = clustered_dataframes[i]\n",
        "\n",
        "    plt.figure(figsize=(12, 6))\n",
        "\n",
        "    cluster_means = cluster_data.groupby('Cluster').mean()\n",
        "\n",
        "    cluster_means[['Impervious', 'Vegetation']].plot(kind='bar', figsize=(14, 7))\n",
        "\n",
        "    plt.title(f'Environmental values by Cluster {i}')\n",
        "    plt.ylabel('Percentage')\n",
        "    plt.xlabel('Cluster')\n",
        "    plt.xticks(rotation=0)\n",
        "\n",
        "    plt.show()\n"
      ],
      "metadata": {
        "id": "FtCAJPnMLWHU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "evaluating the cluster"
      ],
      "metadata": {
        "id": "TnE3BCI1-tQJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import davies_bouldin_score, calinski_harabasz_score, silhouette_score\n",
        "\n",
        "cluster_numbers = [2, 3, 4, 5]\n",
        "\n",
        "silhouette_scores = []\n",
        "davies_bouldin_scores = []\n",
        "calinski_harabasz_scores = []\n",
        "\n",
        "for n_clusters in cluster_numbers:\n",
        "    cluster_data = clustered_dataframes[n_clusters]\n",
        "    cluster_labels = cluster_data['Cluster']\n",
        "\n",
        "    silhouette_avg = silhouette_score(data_normalized, cluster_labels)\n",
        "    davies_bouldin_avg = davies_bouldin_score(data_normalized, cluster_labels)\n",
        "    calinski_harabasz_avg = calinski_harabasz_score(data_normalized, cluster_labels)\n",
        "\n",
        "    silhouette_scores.append(silhouette_avg)\n",
        "    davies_bouldin_scores.append(davies_bouldin_avg)\n",
        "    calinski_harabasz_scores.append(calinski_harabasz_avg)\n",
        "\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "plt.subplot(3, 1, 1)\n",
        "plt.plot(cluster_numbers, silhouette_scores, marker='o')\n",
        "plt.title('Silhouette Score for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Silhouette Score')\n",
        "\n",
        "plt.subplot(3, 1, 2)\n",
        "plt.plot(cluster_numbers, davies_bouldin_scores, marker='o', color='orange')\n",
        "plt.title('Davies-Bouldin Index for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Davies-Bouldin Index')\n",
        "\n",
        "plt.subplot(3, 1, 3)\n",
        "plt.plot(cluster_numbers, calinski_harabasz_scores, marker='o', color='green')\n",
        "plt.title('Calinski-Harabasz Index for Different Numbers of Clusters')\n",
        "plt.xlabel('Number of Clusters')\n",
        "plt.ylabel('Calinski-Harabasz Index')\n",
        "\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "Ua_NdEGX-oIE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Higher the Silhoutte and C-H indexes, the better defined the clusters are and\n",
        "Lower the D-B index, the better defined the clusters are"
      ],
      "metadata": {
        "id": "8LfkbX1jAALz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Anomaly Detection"
      ],
      "metadata": {
        "id": "qPk3SrIVKRv_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import IsolationForest\n"
      ],
      "metadata": {
        "id": "-PxPTV81A8Rz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = IsolationForest(contamination=0.05, random_state=42)\n",
        "model.fit(data_normalized)\n",
        "\n",
        "data_normalized['anomaly'] = model.predict(data_normalized)\n",
        "data_normalized['anomaly'] = data_normalized['anomaly'].map({1: 0, -1: 1})"
      ],
      "metadata": {
        "id": "4GCTwN8gKiLL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "num_anomalies = data_normalized['anomaly'].sum()\n",
        "num_anomalies"
      ],
      "metadata": {
        "id": "iJmSRW11Krxr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_normalized.head()"
      ],
      "metadata": {
        "id": "Yz4HOinpLfdD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a=data_normalized[data_normalized['anomaly'] == 1]"
      ],
      "metadata": {
        "id": "rh75u2SaOW-Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "plt.scatter(data_normalized['longitude'], data_normalized['latitude'], c=data_normalized['anomaly'], cmap='coolwarm', marker='o', alpha=0.6)\n",
        "plt.xlabel('Longitude')\n",
        "plt.ylabel('Latitude')\n",
        "plt.title('Anomalies Detection Scatter Plot')\n",
        "plt.colorbar(label='Anomaly')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "IAmJMmE8KzIJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.scatterplot(x=data_cleaned['longitude'], y=data_cleaned['latitude'], hue=a['anomaly'], palette='pastel')\n",
        "plt.title(f'Anomaly lats and longs')\n",
        "plt.xlabel('Longitude')\n",
        "plt.ylabel('Latitude')\n",
        "plt.legend(title='Cluster')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "DiJzn7buN2yP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Correlation Tests"
      ],
      "metadata": {
        "id": "I9MoSdg1PgC3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from scipy.stats import pearsonr\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "file_path = \"/content/drive/MyDrive/FINALUHIDATA.csv\"\n",
        "df = pd.read_csv(file_path)\n",
        "\n",
        "# Sum total greenness\n",
        "df['Total Greeness'] = df[['grass', 'cultivated vegetation', 'Trees_CanopyCover', 'bush/scrub']].sum(axis=1)\n",
        "\n",
        "variables = ['ECO_L2T_LSTE_002_LST', 'Median Income_LST', 'Total Greeness', 'Impervious Surface (no building)']\n",
        "\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Normalize the columns\n",
        "df[variables] = scaler.fit_transform(df[variables])\n",
        "\n",
        "\n",
        "# Key factors\n",
        "\n",
        "# Calculate correlations and p-values ignoring NaN values pairwise\n",
        "# DON'T SWITCH BACK TO DROP ALL NaN ROWS BECAUSE THAT PREVENTS COMPARISON\n",
        "# OF CERTAIN ROWS THAT STILL HAVE DATA THAT CAN BE COMPARED IN IT\n",
        "results = {}\n",
        "for var1 in variables:\n",
        "    for var2 in variables:\n",
        "        if var1 != var2:\n",
        "            clean_data = df[[var1, var2]].dropna()\n",
        "            corr, p_value = pearsonr(clean_data[var1], clean_data[var2])\n",
        "            results[f\"{var1} with {var2}\"] = (corr, p_value)\n",
        "\n",
        "# Printing all combinations\n",
        "for key, (corr, p_value) in results.items():\n",
        "    print(f\"{key}: Correlation = {corr}, p-value = {p_value}\", end=' ')\n",
        "    if p_value < 0.05:\n",
        "        print(\"Statistically significant\", end='')\n",
        "    print(end='\\n\\n')\n",
        "\n",
        "# Heat map rows\n",
        "heatmap_data = df[variables]\n",
        "\n",
        "# Correlation matrix\n",
        "correlation_matrix = heatmap_data.corr()\n",
        "\n",
        "# Create heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.3f', square=True, vmin=-1, vmax=1, center=0)\n",
        "plt.title('Correlation Heatmap')\n",
        "plt.tight_layout()\n",
        "plt.savefig('/content/drive/MyDrive/correlation_heatmap.png')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "dQ-khTzrLHv7"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
